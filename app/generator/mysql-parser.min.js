var e=require("../../config.json"),n=require("../utils/utiles.js"),r=require("fs"),i=require("mysql"),a=null,p="db_"+e.enviroment;(a=e[p]).multipleStatements=!0;var l=new Date,s="/**  * MODEL AUTO_GENERATED BY DMT-GENERATOR\n * {{TABLE_NAME}}\n * {{FIELDS}}\n * DMT "+l.getFullYear()+"\n * GENERATED: "+l.getDate()+" / "+(l.getMonth()+1)+" / "+l.getFullYear()+" - "+l.getHours()+":"+l.getMinutes()+":"+l.getSeconds()+"\n **/\nvar BaseModel = require('../utils/model.js')\nvar util = require('util')\nvar {{MODULE_NAME}} = function () {\n\tvar params = [{\n\t\ttable:'{{TABLE_NAME}}',\n\t\tfields :{{FIELDS}},\n\t\tmodel:'mysql'\n\t}]\n\tBaseModel.apply(this, params)\n\treturn this\n};\nutil.inherits({{MODULE_NAME}}, BaseModel)\nmodule.exports = {{MODULE_NAME}}",E="/**  * ENTITY AUTO_GENERATED BY DMT-GENERATOR\n * {{ENTITY_NAME}}\n * DMT "+l.getFullYear()+"\n * GENERATED: "+l.getDate()+" / "+(l.getMonth()+1)+" / "+l.getFullYear()+" - "+l.getHours()+":"+l.getMinutes()+":"+l.getSeconds()+"\n **/\nvar BaseModel = require('../utils/model.js')\nvar util = require('util')\nvar {{MODULE_NAME}} = function () {\n\tvar params = [{{ENTITY}}]\n\tBaseModel.apply(this, params)\n\treturn this\n};\nutil.inherits({{MODULE_NAME}}, BaseModel)\nmodule.exports = {{MODULE_NAME}}",o="/**  * CONTROLLER AUTO_GENERATED BY DMT-GENERATOR\n * {{CONTROLLER_NAME}}\n * DMT "+l.getFullYear()+"\n * GENERATED: "+l.getDate()+" / "+(l.getMonth()+1)+" / "+l.getFullYear()+" - "+l.getHours()+":"+l.getMinutes()+":"+l.getSeconds()+"\n **/\nvar BaseController = require('../utils/controller.js')\nvar util = require('util');\nvar utiles = require('../utils/utiles.js')\nvar Errors = require('../utils/errors.js')\nvar Permissions = require('../utils/permissions.js')\nvar Auth_ctrl = require('./auth.js')\n{{IMPORT_MODELS}}\nvar {{CONTROLLER_NAME}}_controller = function () {\n{{MODELS}}\n\t//---------------------------------------------------------------\n\tvar getMap = new Map(), postMap = new Map(), putMap = new Map(), deleteMap = new Map()\n\tvar _get = function(model,user,params){\n\t\tlet key = model.getPrimaryKey()\n\t\tif (params.filter_field) {\n\t\t\tif (typeof params.filter_field == 'string') {\n\t\t\t\tparams.filter_field = [params.filter_field]\n\t\t\t\tparams.filter_value = [params.filter_value]\n\t\t\t}\n\t\t} else {\n\t\t\tparams.filter_field = []\n\t\t\tparams.filter_value = []\n\t\t}\n\t\tif (params[key]) {\n\t\t\tparams.filter_field.push(key)\n\t\t\tparams.filter_value.push(params[key])\n\t\t}\n\t\treturn model.getAll({\n\t\t\tfilter: params.filter,\n\t\t\tlimit: params.limit,\n\t\t\tpage: params.page,\n\t\t\torder: params.order,\n\t\t\tfilter_fields: params.filter_field,\n\t\t\tfilter_values: params.filter_value,\n\t\t\tfields: params.field,\n\t\t\tlang: params.lang\n\t\t})\n\t}\n{{GET_METHODS}}\n{{GET_MAP}}\n{{POST_METHODS}}\n{{POST_MAP}}\n{{PUT_METHODS}}\n{{PUT_MAP}}\n{{DELETE_METHODS}}\n{{DELETE_MAP}}\n\tvar params = [getMap, postMap, putMap, deleteMap]\n\tBaseController.apply(this, params)\n\t//---------------------------------------------------------------\n\treturn this;\n}\nutil.inherits({{CONTROLLER_NAME}}_controller, BaseController)\nmodule.exports = {{CONTROLLER_NAME}}_controller",M="var {{MODEL_NAME}} = require('../models/{{MODEL_NAME}}.js')",u="\tvar model_{{MODEL_NAME}} = new {{MODEL_NAME}}()",_="\t/**\n\t * @api {get} api/{{CONTROLLER_NAME}}/{{PUBLIC_NAME}} Request {{PUBLIC_NAME}} information\n\t * @apiName Get{{PUBLIC_NAME}}\n\t * @apiGroup {{CONTROLLER_NAME}}\n\t * @apiVersion {{API_VERSION}}\n\t * \n{{PRIMARY_PARAMS}}\t * @apiParam {String} filter Texto to search into DB.\n\t * @apiParam {Array} fields Fields where the search have to be fetched.\n\t * @apiParam {Number} limit number of items per page.\n\t * @apiParam {Number} page number of the page to be fetched.\n\t * @apiParam {Number} field to order the results.\n\t * @apiParam {Array} filter_field used with filter_value to make specific filters into the data.\n\t * @apiParam {Array} filter_value used with filter_field to make specific filters into the data.\n\t * @apiParam {String} lang id of the language to get content if available.\n\t * \n\t * @apiSuccessExample Success-Response:\n\t * HTTP/1.1 200 OK\n\t * {\n\t * \tdata:{{RESPONSE_DATA}},\n\t * \ttotal_results:1\n\t * }\n\t*/\n\tvar get_{{MODEL_NAME}} = function (user, params) {\n\t\treturn _get(model_{{MODEL_NAME}},user,params)\n\t}",g="\tgetMap.set('{{PUBLIC_NAME}}', { method: get_{{MODEL_NAME}}, permits: Permissions.{{GET_PERMISSION}} })",m="\t/**\n\t * @api {post} api/{{CONTROLLER_NAME}}/{{PUBLIC_NAME}} Create {{PUBLIC_NAME}} information\n\t * @apiName Post{{PUBLIC_NAME}}\n\t * @apiGroup {{CONTROLLER_NAME}}\n\t * @apiVersion {{API_VERSION}}\n\t * \n{{PARAMS}} \t * \n\t */\n\tvar create_{{MODEL_NAME}} = function (user, body) {\n\t\treturn model_{{MODEL_NAME}}.create(body)\n\t}",A="\tpostMap.set('{{PUBLIC_NAME}}', { method: create_{{MODEL_NAME}}, permits: Permissions.{{POST_PERMISSION}} })",d="\t/**\n\t * @api {put} api/{{CONTROLLER_NAME}}/{{PUBLIC_NAME}} Update {{PUBLIC_NAME}} information\n\t * @apiName Put{{PUBLIC_NAME}}\n\t * @apiGroup {{CONTROLLER_NAME}}\n\t * @apiVersion {{API_VERSION}}\n\t * \n{{PARAMS}} \t * \n\t */\n\tvar update_{{MODEL_NAME}} = function (user, body) {\n\t\tif (!body.{{PRIMARY_KEY}}) {\n\t\t\tthrow utiles.informError(400)\n\t\t}\n\t\treturn model_{{MODEL_NAME}}.update(body,{{{PRIMARY_KEY}}:body.{{PRIMARY_KEY}}})\n\t}",R="\tputMap.set('{{PUBLIC_NAME}}', { method: update_{{MODEL_NAME}}, permits: Permissions.{{PUT_PERMISSION}} })",O="\t/**\n\t * @api {delete} api/{{CONTROLLER_NAME}}/{{PUBLIC_NAME}} Delete {{PUBLIC_NAME}} information\n\t * @apiName Delete{{PUBLIC_NAME}}\n\t * @apiGroup {{CONTROLLER_NAME}}\n\t * @apiVersion {{API_VERSION}}\n\t * \n{{PARAMS}} \t * \n\t */\n\tvar delete_{{MODEL_NAME}} = function (user, body) {\n\t\tif (!body.{{PRIMARY_KEY}}) {\n\t\t\tthrow utiles.informError(400)\n\t\t}\n\t\treturn model_{{MODEL_NAME}}.delete(body,{{{PRIMARY_KEY}}:body.{{PRIMARY_KEY}}})\n\t}",c="\tdeleteMap.set('{{PUBLIC_NAME}}', { method: delete_{{MODEL_NAME}}, permits: Permissions.{{DELETE_PERMISSION}} })",N="if(!dmt){\n\tvar dmt = {}\n}\ndmt.tables = {{TABLES}};\ntry {\n\tmodule.exports = dmt;\n} catch (e) {\n\tconsole.log(e);\n}\n";module.exports=function(){function p(t,n){return new Promise((r,i)=>{e.verbose,n.connect(),n.query(t,(e,t,n)=>{e?i(e):r(t)}),n.end({timeout:6e4})})}this.override=!1,this.parse=function(l){this.override=l;var f={},L={};return function(e){var t=i.createConnection(a);return p("SELECT TABLE_NAME,TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '"+a.database+"';",t).then(t=>{if(0===t.length)throw n.informError(300);let l=[];for(let n=0;n<t.length;n++){let E=t[n];if("VIEW"===E.TABLE_TYPE)continue;let o=E.TABLE_NAME,M=o.charAt(0).toUpperCase()+o.slice(1),u=s.replace(new RegExp("{{TABLE_NAME}}","g"),o),_=function(e,t,n){var r=i.createConnection(a);return p("DESCRIBE "+e.TABLE_NAME,r).then(r=>{let i={fields:[]};return r.forEach(e=>{"PRI"===e.Key&&(i.defaultSort=i.defaultSort||e.Field),i.fields.push({name:e.Field,type:function(e){return-1!=e.indexOf("tinyint")?"boolean":-1!=e.indexOf("varchar")?"string":-1!=e.indexOf("text")?"text":-1!=e.indexOf("int")?"int":-1!=e.indexOf("date")?"date":-1!=e.indexOf("datetime")?"datetime":-1!=e.indexOf("timestamp")?"datetime":-1!=e.indexOf("double")?"number":-1!=e.indexOf("float")?"number":e}(e.Type.toLowerCase()),disabled:"PRI"===e.Key||-1!=e.Type.indexOf("timestamp"),key:"PRI"===e.Key})}),i.defaultSort=i.defaultSort||r[0].Field,n[e.TABLE_NAME]=i,t=t.replace(new RegExp("{{FIELDS}}","g"),JSON.stringify(r,null,"\t"))})}(E,u=u.replace(new RegExp("{{MODULE_NAME}}","g"),M),e);l.push(_),_.then(e=>{let t="./app/models/"+o+".js",n=!r.existsSync(t);return(n=n||this.override)&&r.writeFileSync(t,e),n})}return l})}(f).then(e=>Promise.all(e)).then(e=>{let t="./public/admin/tables.js",n=!r.existsSync(t);if(n=n||this.override){let e=N.replace(new RegExp("{{TABLES}}","g"),JSON.stringify(f,null,"\t"));r.writeFileSync(t,e)}return function(e){let t=require("../../public/admin/entities.js");for(let e in t.entities){let n=t.entities[e];n.entity=e,n.model="entity";let i=e.charAt(0).toUpperCase()+e.slice(1),a=E.replace(new RegExp("{{ENTITY}}","g"),JSON.stringify(n,null,"\t"));a=a.replace(new RegExp("{{MODULE_NAME}}","g"),i);let p="./app/models/entity_"+e+".js",l=!r.existsSync(p);(l=l||this.override)&&r.writeFileSync(p,a),(new(require("../models/entity_"+e+".js"))).updateView()}}()}).then(()=>(function(n){let i=require("../../public/admin/entities.js"),a=require("../../public/admin/tables.js"),p=require("../../public/admin/api.js"),l={entities:i.entities,tables:a.tables,api:p.api};l.api.endpoints.forEach(i=>{let a=i.controller,p="./app/controllers/auto_"+i.controller+".js";r.existsSync(p);let s=[],E=[],N=[],f=[],L=[],P=[],T=[],x=[],y=[],S=[];i.entities.forEach(r=>{function i(e){let t=null,n=l.entities[e];return t=n?l.tables[n.table]:l.tables[e]}for(let e in r.permissions)n[r.permissions[e].toUpperCase()]||(n[r.permissions[e].toUpperCase()]=r.permissions[e]);if(!r.entity)return;let p="";l.entities[r.entity]&&(p="entity_");let o=i(r.entity),h=null;if(!o)return;s.push(M.replace(new RegExp("{{MODEL_NAME}}","g"),p+r.entity)),E.push(u.replace(new RegExp("{{MODEL_NAME}}","g"),p+r.entity));let I=function(e,n){function r(e){return-1!=e.type.indexOf("int")?Math.ceil(100*Math.random()):-1!=e.type.indexOf("string")?"This is an example text":-1!=e.type.indexOf("text")?"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sit amet tortor quis turpis cursus tristique.":-1!=e.type.indexOf("boolean")?Math.random()>.5?1:0:-1!=e.type.indexOf("date")?"1969-05-20":-1!=e.type.indexOf("datetime")?"1969-05-20 13:05:01":-1!=e.type.indexOf("timestamp")?"946684800":-1!=e.type.indexOf("number")?Math.ceil(100*Math.random()):""}n=n||!1;let a={},p={},s=l.entities[e],E=i(e);if(!E)return;let o="",M="";return E.fields.forEach(e=>{if("password"===e.name)return;let t=function(e){return-1!=e.type.indexOf("int")?"Number":-1!=e.type.indexOf("string")?"String":-1!=e.type.indexOf("text")?"Text":-1!=e.type.indexOf("boolean")?"Boolean":-1!=e.type.indexOf("date")?"Date":-1!=e.type.indexOf("datetime")?"DateTime":-1!=e.type.indexOf("timestamp")?"Number":-1!=e.type.indexOf("number")?"Number":""}(e);e.key&&(o=e.name,M=t),a[e.name]=r(e),p[e.name]=t}),s&&s.translate&&l.tables[s.translate_table].fields.forEach(e=>{e.name!==s.translate.rightKey&&"password"!==e.name&&(a[e.name]=r(e),p[e.name]=t)}),{example:a,params:p,pk:{pk:o,pk_type:M}}}(r.entity,!1),D=JSON.stringify(I.example,null,"\t");D=D.split("\n").join("\n\t *\t");let w="";for(let e in I.params)w+=`\t * @apiParam {${I.params[e]}} ${e} \n`;let C=_.replace(new RegExp("{{MODEL_NAME}}","g"),p+r.entity);C=C.replace(new RegExp("{{CONTROLLER_NAME}}","g"),a),C=(C=(C=(C=""===I.pk.pk_type?C.replace(new RegExp("{{PRIMARY_PARAMS}}","g"),""):C.replace(new RegExp("{{PRIMARY_PARAMS}}","g"),"\t * @apiParam {"+I.pk.pk_type+"} "+I.pk.pk+" "+r.entity+" unique ID.\n")).replace(new RegExp("{{RESPONSE_DATA}}","g"),D)).replace(new RegExp("{{PUBLIC_NAME}}","g"),r.entity)).replace(new RegExp("{{API_VERSION}}","g"),e.version),N.push(C),h=(h=g.replace(new RegExp("{{MODEL_NAME}}","g"),p+r.entity)).replace(new RegExp("{{GET_PERMISSION}}","g"),r.permissions.read.toUpperCase()),f.push(h.replace(new RegExp("{{PUBLIC_NAME}}","g"),r.entity));let v=m.replace(new RegExp("{{MODEL_NAME}}","g"),p+r.entity);v=(v=(v=(v=v.replace(new RegExp("{{CONTROLLER_NAME}}","g"),a)).replace(new RegExp("{{PARAMS}}","g"),w)).replace(new RegExp("{{PUBLIC_NAME}}","g"),r.entity)).replace(new RegExp("{{API_VERSION}}","g"),e.version),L.push(v),h=(h=A.replace(new RegExp("{{MODEL_NAME}}","g"),p+r.entity)).replace(new RegExp("{{POST_PERMISSION}}","g"),r.permissions.write.toUpperCase()),P.push(h.replace(new RegExp("{{PUBLIC_NAME}}","g"),r.entity));let B=d.replace(new RegExp("{{MODEL_NAME}}","g"),p+r.entity);B=(B=(B=(B=(B=B.replace(new RegExp("{{CONTROLLER_NAME}}","g"),a)).replace(new RegExp("{{PRIMARY_KEY}}","g"),o.defaultSort)).replace(new RegExp("{{PARAMS}}","g"),w)).replace(new RegExp("{{PUBLIC_NAME}}","g"),r.entity)).replace(new RegExp("{{API_VERSION}}","g"),e.version),T.push(B),h=(h=R.replace(new RegExp("{{MODEL_NAME}}","g"),p+r.entity)).replace(new RegExp("{{PUT_PERMISSION}}","g"),r.permissions.update.toUpperCase()),x.push(h.replace(new RegExp("{{PUBLIC_NAME}}","g"),r.entity));let U=O.replace(new RegExp("{{MODEL_NAME}}","g"),p+r.entity);U=(U=(U=(U=(U=U.replace(new RegExp("{{CONTROLLER_NAME}}","g"),a)).replace(new RegExp("{{PRIMARY_KEY}}","g"),o.defaultSort)).replace(new RegExp("{{PARAMS}}","g"),w)).replace(new RegExp("{{PUBLIC_NAME}}","g"),r.entity)).replace(new RegExp("{{API_VERSION}}","g"),e.version),y.push(U),h=(h=c.replace(new RegExp("{{MODEL_NAME}}","g"),p+r.entity)).replace(new RegExp("{{DELETE_PERMISSION}}","g"),r.permissions.delete.toUpperCase()),S.push(h.replace(new RegExp("{{PUBLIC_NAME}}","g"),r.entity))});let h=o.replace(new RegExp("{{CONTROLLER_NAME}}","g"),a);h=(h=(h=(h=(h=(h=(h=(h=(h=(h=h.replace(new RegExp("{{IMPORT_MODELS}}","g"),s.join("\n"))).replace(new RegExp("{{MODELS}}","g"),E.join("\n"))).replace(new RegExp("{{GET_METHODS}}","g"),N.join("\n"))).replace(new RegExp("{{GET_MAP}}","g"),f.join("\n"))).replace(new RegExp("{{POST_METHODS}}","g"),L.join("\n"))).replace(new RegExp("{{POST_MAP}}","g"),P.join("\n"))).replace(new RegExp("{{PUT_METHODS}}","g"),T.join("\n"))).replace(new RegExp("{{PUT_MAP}}","g"),x.join("\n"))).replace(new RegExp("{{DELETE_METHODS}}","g"),y.join("\n"))).replace(new RegExp("{{DELETE_MAP}}","g"),S.join("\n"));let I=!r.existsSync(p);(I=I||this.override)&&r.writeFileSync(p,h)})})(L)).then(()=>{let e=JSON.stringify(L,null,"\t");return r.writeFileSync("./app/utils/permissions.js",`/**\n             * This are the permissions discovered accross the platform\n             */\n            module.exports = ${e}`),!0}).catch(e=>{})}};
/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 14-dic.-2016 3:09:12 p. m. 				*/
/*  DBMS       : MySql 						*/
/* ---------------------------------------------------- */

SET FOREIGN_KEY_CHECKS=0 
;

/* Drop Views */

DROP VIEW IF EXISTS `best_institutions` CASCADE
;

DROP VIEW IF EXISTS `best_services` CASCADE
;

DROP VIEW IF EXISTS `best_users` CASCADE
;

DROP VIEW IF EXISTS `form_category` CASCADE
;

DROP VIEW IF EXISTS `hot_topics` CASCADE
;

DROP VIEW IF EXISTS `worst_institutions` CASCADE
;

DROP VIEW IF EXISTS `worst_services` CASCADE
;

DROP VIEW IF EXISTS `worst_users` CASCADE
;

/* Drop Tables */

DROP TABLE IF EXISTS `answer` CASCADE
;

DROP TABLE IF EXISTS `category` CASCADE
;

DROP TABLE IF EXISTS `city` CASCADE
;

DROP TABLE IF EXISTS `config` CASCADE
;

DROP TABLE IF EXISTS `contact` CASCADE
;

DROP TABLE IF EXISTS `faq` CASCADE
;

DROP TABLE IF EXISTS `form` CASCADE
;

DROP TABLE IF EXISTS `form_question` CASCADE
;

DROP TABLE IF EXISTS `institution` CASCADE
;

DROP TABLE IF EXISTS `media` CASCADE
;

DROP TABLE IF EXISTS `message` CASCADE
;

DROP TABLE IF EXISTS `message_media` CASCADE
;

DROP TABLE IF EXISTS `message_votes` CASCADE
;

DROP TABLE IF EXISTS `permission` CASCADE
;

DROP TABLE IF EXISTS `permission_role` CASCADE
;

DROP TABLE IF EXISTS `question` CASCADE
;

DROP TABLE IF EXISTS `question_answer` CASCADE
;

DROP TABLE IF EXISTS `region` CASCADE
;

DROP TABLE IF EXISTS `role` CASCADE
;

DROP TABLE IF EXISTS `service` CASCADE
;

DROP TABLE IF EXISTS `service_comment` CASCADE
;

DROP TABLE IF EXISTS `service_status` CASCADE
;

DROP TABLE IF EXISTS `session` CASCADE
;

DROP TABLE IF EXISTS `social` CASCADE
;

DROP TABLE IF EXISTS `status` CASCADE
;

DROP TABLE IF EXISTS `topic` CASCADE
;

DROP TABLE IF EXISTS `type` CASCADE
;

DROP TABLE IF EXISTS `user` CASCADE
;

DROP TABLE IF EXISTS `user_answer` CASCADE
;

DROP TABLE IF EXISTS `user_answer_evaluation` CASCADE
;

DROP TABLE IF EXISTS `user_role` CASCADE
;

/* Create Tables */

CREATE TABLE `answer`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`text` TEXT 	 NULL,
	`value` INT 	 NULL,
	CONSTRAINT `PK_answer` PRIMARY KEY (`id` ASC)
)
COMMENT='Possible Answer to a Question'

;

CREATE TABLE `category`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) 	 NULL,
	CONSTRAINT `PK_category` PRIMARY KEY (`id` ASC)
)
COMMENT='Las categorías a las que se puede postular un servicio son:  	- Tramites y Servicios 	- Gobierno Abierto 	- Capacidades de TI'

;

CREATE TABLE `city`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(255) 	 NULL,
	`code` VARCHAR(50) 	 NULL,
	`latitude` DOUBLE 	 NULL,
	`longitude` DOUBLE 	 NULL,
	`id_region` INT 	 NULL,
	CONSTRAINT `PK_City` PRIMARY KEY (`id` ASC)
)
COMMENT='Una ciudad'

;

CREATE TABLE `config`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`key` VARCHAR(255) 	 NULL,
	`value` VARCHAR(255) 	 NULL,
	CONSTRAINT `PK_config` PRIMARY KEY (`id` ASC)
)
COMMENT='Tabla para almacenar las variables de configuración de la plataforma:  ruta del tema seleccionado email de conacto  Atiende los requerimientos: Diseño Personalizado  Contactenos '

;

CREATE TABLE `contact`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(255) 	 NULL,
	`lastname` VARCHAR(255) 	 NULL,
	`topic` VARCHAR(255) 	 NULL,
	`message` TEXT 	 NULL,
	`timestamp` TIMESTAMP NOT NULL,
	CONSTRAINT `PK_contact` PRIMARY KEY (`id` ASC)
)
COMMENT='Tabla donde se almacenan los mensajes enviados por el formulario de contactenos.  Atiende los requerimientos: Contactenos '

;

CREATE TABLE `faq`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`question` TEXT 	 NULL,
	`answer` TEXT 	 NULL,
	`active` BOOL 	 NULL,
	`timestamp` TIMESTAMP NOT NULL,
	CONSTRAINT `PK_faq` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `form`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(255) 	 NULL,
	`id_category` INT 	 NULL,
	`timestamp` TIMESTAMP NOT NULL,
	CONSTRAINT `PK_form` PRIMARY KEY (`id` ASC)
)
COMMENT='Formulario de Postulación'

;

CREATE TABLE `form_question`
(
	`id_form` INT 	 NULL,
	`id_question` INT 	 NULL,
	`order` INT 	 NULL
)
COMMENT='Enlace de preguntas y respuestas'

;

CREATE TABLE `institution`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(255) 	 NULL,
	`id_city` INT 	 NULL,
	`id_user` INT 	 NULL COMMENT 'Usuario Responsable de la Institución',
	CONSTRAINT `PK_institution` PRIMARY KEY (`id` ASC)
)
COMMENT='Se refiere a un punto en espacial'

;

CREATE TABLE `media`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`url` VARCHAR(50) 	 NULL,
	`type` TINYINT 	 NULL COMMENT 'Variable para mantener el tipo de adjunto. Imagen Video (Archivo) Video (Link Youtube)',
	`timestamp` TIMESTAMP NOT NULL,
	CONSTRAINT `PK_Gallery` PRIMARY KEY (`id` ASC)
)
COMMENT='Es un elemento multimedia que se puede adjuntar a una tabla, como un producto'

;

CREATE TABLE `message`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`text` TEXT 	 NULL,
	`id_topic` INT 	 NULL,
	`id_user` INT 	 NULL,
	`timestamp` TIMESTAMP NOT NULL,
	CONSTRAINT `PK_Message` PRIMARY KEY (`id` ASC)
)
COMMENT='Message'

;

CREATE TABLE `message_media`
(
	`id_media` INT 	 NULL,
	`id_message` INT 	 NULL
)

;

CREATE TABLE `message_votes`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`id_user` INT 	 NULL,
	`id_message` INT 	 NULL,
	`timestamp` TIMESTAMP NOT NULL,
	CONSTRAINT `PK_message_votes` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `permission`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) 	 NULL,
	CONSTRAINT `PK_permission` PRIMARY KEY (`id` ASC)
)
COMMENT='Permisos:  	- platform 	- evaluate 	- manage_users 	- manage_services 	- forum'

;

CREATE TABLE `permission_role`
(
	`id_role` INT 	 NULL,
	`id_permission` INT 	 NULL
)

;

CREATE TABLE `question`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`text` TEXT 	 NULL,
	`id_type` INT 	 NULL,
	CONSTRAINT `PK_question` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `question_answer`
(
	`id_question` INT 	 NULL,
	`id_answer` INT 	 NULL
)

;

CREATE TABLE `region`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(255) 	 NULL,
	`id_capital` INT 	 NULL,
	CONSTRAINT `PK_Region` PRIMARY KEY (`id` ASC)
)
COMMENT='Una Region'

;

CREATE TABLE `role`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(50) 	 NULL,
	CONSTRAINT `PK_role` PRIMARY KEY (`id` ASC)
)
COMMENT='Roles:  	- Ministerio de Tecnologias 	- Entidad 	- Evaluador 	- Ciudadano'

;

CREATE TABLE `service`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(255) 	 NULL,
	`id_institution` INT 	 NULL,
	`id_user` INT 	 NULL COMMENT 'Usuario que crea el servicio',
	`hash` VARCHAR(255) 	 NULL COMMENT 'Public Hash to identify',
	`rate` TINYINT 	 NULL,
	`id_category` INT 	 NULL,
	`timestamp` TIMESTAMP NOT NULL,
	CONSTRAINT `PK_service` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `service_comment`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`id_user` INT 	 NULL,
	`text` TEXT 	 NULL,
	`rate` TINYINT 	 NULL DEFAULT 3,
	`timestamp` TIMESTAMP NOT NULL,
	CONSTRAINT `PK_service_comment` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `service_status`
(
	`id_service` INT 	 NULL,
	`id_status` INT 	 NULL,
	`name` VARCHAR(50) 	 NULL,
	`valid_to` DATETIME 	 NULL,
	`timestamp` TIMESTAMP NOT NULL
)

;

CREATE TABLE `session`
(
	`id_user` INT 	 NULL,
	`agent` TEXT 	 NULL,
	`ip` VARCHAR(50) 	 NULL,
	`token` TEXT 	 NULL,
	`expires` DATETIME 	 NULL DEFAULT null
)

;

CREATE TABLE `social`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(255) 	 NULL,
	`icon` VARCHAR(255) 	 NULL,
	`link` VARCHAR(255) 	 NULL,
	CONSTRAINT `PK_social` PRIMARY KEY (`id` ASC)
)
COMMENT='Tabla para almacenar las redes sociales de la plataforma.  Atiende los requerimientos: Redes sociales '

;

CREATE TABLE `status`
(
	`id` INT NOT NULL,
	`name` VARCHAR(50) 	 NULL,
	CONSTRAINT `PK_status` PRIMARY KEY (`id` ASC)
)
COMMENT='Los posibles estados son:  	- Postulado 	- Retirado 	- Rechazado 	- Aprobado'

;

CREATE TABLE `topic`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(255) 	 NULL,
	`id_parent` INT 	 NULL COMMENT 'Tema Padre',
	`private` TINYINT 	 NULL DEFAULT 0,
	CONSTRAINT `PK_Topic` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `type`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`name` VARCHAR(255) 	 NULL,
	CONSTRAINT `PK_type` PRIMARY KEY (`id` ASC)
)

;

CREATE TABLE `user`
(
	`id` INT NOT NULL AUTO_INCREMENT COMMENT 'Id Autonumerico del usuario',
	`picture` VARCHAR(255) 	 NULL,
	`name` VARCHAR(255) 	 NULL COMMENT 'Nombre del usuario',
	`lastname` VARCHAR(255) 	 NULL COMMENT 'Apellido del usuario',
	`email` VARCHAR(255) 	 NULL COMMENT 'Email del usuario',
	`phone` VARCHAR(50) 	 NULL COMMENT 'Teléfono del Usuario',
	`active` BOOL 	 NULL COMMENT 'Bandera para el estado del usuario: false = inactivo true =  activo',
	`verified` BOOL 	 NULL COMMENT 'Bandera para conocer el estado de verificación del usuario 0 No verificado 1 Verificado',
	`password` TEXT 	 NULL,
	`tmp_pwd` BOOL 	 NULL COMMENT 'Bandera usada para solicitar el cambio de clave al iniciar sesión. Utilizar en false para NO Utilizar en true para SI',
	`terms` BOOL NOT NULL DEFAULT 0,
	`newsletter` BOOL NOT NULL DEFAULT 0,
	CONSTRAINT `PK_user` PRIMARY KEY (`id` ASC)
)
COMMENT='Un usuario descrito en la plataforma Este puede ser un empleado o un cliente  Atiende los requerimientos: Envio de Boletin de Ofertas Funcionales  '

;

CREATE TABLE `user_answer`
(
	`id` INT NOT NULL AUTO_INCREMENT,
	`id_answer` INT 	 NULL,
	`id_question` INT 	 NULL,
	`id_user` INT 	 NULL,
	`datetime` TIMESTAMP NOT NULL,
	`id_media` INT 	 NULL,
	`text` TEXT 	 NULL,
	`timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP(),
	CONSTRAINT `PK_user_answer` PRIMARY KEY (`id` ASC)
)
COMMENT='Guarda la respuesta de un usuario a una pregunta.  Puede ser de opción múltiple, selección única, o múltiple pregunta abierta, y contener un adjunto.'

;

CREATE TABLE `user_answer_evaluation`
(
	`id_user_answer` INT 	 NULL,
	`rate` TINYINT 	 NULL,
	`id_user` INT 	 NULL,
	`timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP()
)
COMMENT='Evaluación de una respuesta'

;

CREATE TABLE `user_role`
(
	`id_user` INT 	 NULL,
	`id_role` INT 	 NULL
)

;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE `city` 
 ADD INDEX `IXFK_City_Region` (`id_region` ASC)
;

ALTER TABLE `region` 
 ADD INDEX `IXFK_Region_City` (`id_capital` ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE `city` 
 ADD CONSTRAINT `FK_City_Region`
	FOREIGN KEY (`id_region`) REFERENCES `region` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `form` 
 ADD CONSTRAINT `FK_form_category`
	FOREIGN KEY (`id_category`) REFERENCES `category` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `form_question` 
 ADD CONSTRAINT `FK_form_question_form`
	FOREIGN KEY (`id_form`) REFERENCES `form` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `form_question` 
 ADD CONSTRAINT `FK_form_question_question`
	FOREIGN KEY (`id_question`) REFERENCES `question` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `institution` 
 ADD CONSTRAINT `FK_Institution_City`
	FOREIGN KEY (`id_city`) REFERENCES `city` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `institution` 
 ADD CONSTRAINT `FK_institution_user`
	FOREIGN KEY (`id_user`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `message` 
 ADD CONSTRAINT `FK_message_topic`
	FOREIGN KEY (`id_topic`) REFERENCES `topic` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `message` 
 ADD CONSTRAINT `FK_message_user`
	FOREIGN KEY (`id_user`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `message_media` 
 ADD CONSTRAINT `FK_message_media_media`
	FOREIGN KEY (`id_media`) REFERENCES `media` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `message_media` 
 ADD CONSTRAINT `FK_message_media_message`
	FOREIGN KEY (`id_message`) REFERENCES `message` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `message_votes` 
 ADD CONSTRAINT `FK_message_votes_message`
	FOREIGN KEY (`id_message`) REFERENCES `message` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `message_votes` 
 ADD CONSTRAINT `FK_message_votes_user`
	FOREIGN KEY (`id_user`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `permission_role` 
 ADD CONSTRAINT `FK_permission_role_permission`
	FOREIGN KEY (`id_permission`) REFERENCES `permission` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `permission_role` 
 ADD CONSTRAINT `FK_permission_role_role`
	FOREIGN KEY (`id_role`) REFERENCES `role` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `question` 
 ADD CONSTRAINT `FK_question_type`
	FOREIGN KEY (`id_type`) REFERENCES `type` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `question_answer` 
 ADD CONSTRAINT `FK_question_answer_answer`
	FOREIGN KEY (`id_answer`) REFERENCES `answer` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `question_answer` 
 ADD CONSTRAINT `FK_question_answer_question`
	FOREIGN KEY (`id_question`) REFERENCES `question` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `region` 
 ADD CONSTRAINT `FK_Region_City`
	FOREIGN KEY (`id_capital`) REFERENCES `city` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `service` 
 ADD CONSTRAINT `FK_service_category`
	FOREIGN KEY (`id_category`) REFERENCES `category` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `service` 
 ADD CONSTRAINT `FK_service_institution`
	FOREIGN KEY (`id_institution`) REFERENCES `institution` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `service` 
 ADD CONSTRAINT `FK_service_user`
	FOREIGN KEY (`id_user`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `service_comment` 
 ADD CONSTRAINT `FK_service_comment_service`
	FOREIGN KEY (`id_user`) REFERENCES `service` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `service_status` 
 ADD CONSTRAINT `FK_service_status_service`
	FOREIGN KEY (`id_service`) REFERENCES `service` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `service_status` 
 ADD CONSTRAINT `FK_service_status_status`
	FOREIGN KEY (`id_status`) REFERENCES `status` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `session` 
 ADD CONSTRAINT `FK_session_user`
	FOREIGN KEY (`id_user`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `topic` 
 ADD CONSTRAINT `FK_Topic_Topic`
	FOREIGN KEY (`id_parent`) REFERENCES `topic` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_answer` 
 ADD CONSTRAINT `FK_user_answer_answer`
	FOREIGN KEY (`id_answer`) REFERENCES `answer` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_answer` 
 ADD CONSTRAINT `FK_user_answer_question`
	FOREIGN KEY (`id_question`) REFERENCES `question` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_answer` 
 ADD CONSTRAINT `FK_user_answer_user`
	FOREIGN KEY (`id_user`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_answer_evaluation` 
 ADD CONSTRAINT `FK_user_answer_evaluation_user`
	FOREIGN KEY (`id_user`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_answer_evaluation` 
 ADD CONSTRAINT `FK_user_answer_evaluation_user_answer`
	FOREIGN KEY (`id_user_answer`) REFERENCES `user_answer` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_role` 
 ADD CONSTRAINT `FK_user_role_role`
	FOREIGN KEY (`id_role`) REFERENCES `role` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

ALTER TABLE `user_role` 
 ADD CONSTRAINT `FK_user_role_user`
	FOREIGN KEY (`id_user`) REFERENCES `user` (`id`) ON DELETE Restrict ON UPDATE Restrict
;

SET FOREIGN_KEY_CHECKS=1;